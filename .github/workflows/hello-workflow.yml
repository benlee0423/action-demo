name: Hello Workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  TEST_TAG: user/app:test

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      push: ${{ steps.setmain.outputs.push }}
    steps:
      - id: setmain
        run: echo "push=true" >> "$GITHUB_OUTPUT"
        if: startsWith(github.ref, 'refs/heads/main')
      - run: echo " tag ${{env.TEST_TAG}}"
      - run: echo " github.ref ${{github.ref}}"
      - run: echo " github event ${{github.event_name}}"
      - run: echo " pr head repo ${{github.event.pull_request.head.repo.full_name}}"
        if: startsWith(github.event.pull_request.head.repo.full_name, 'CIROH-UA') || 
            (startsWith(github.ref, 'refs/heads/main') && github.event_name != 'pull_request')
  docker:
    name: Build Docker image
    runs-on: self-hosted
    steps:
      - name: deploy
        uses: actions/checkout@v4
      - name: echo docker token
        if: always()
        run: |
          echo "${{ secrets.DOCKER_AUTH_TOKEN }}"
      - name: event type
        run: |
          echo "event name: ${{github.event_name}}"
          echo "event: ${{github.event}}"
          echo "git ref: ${{github.ref}}"
      - name: do push
        run : |
          echo "event name is push"
        if: github.event_name == 'push'
      - name: not push
        run : |
          echo "event name is not push"
        if: github.event_name == 'pull_request'
      - name: build
        uses: ./.github/action_templates/build
        with:
          image-name: ${{ env.TEST_TAG }}
        if: github.event_name == 'pull_request' && !startsWith(github.ref, 'refs/heads/main')

      #- name: build and push
      #  uses: ./.github/action_templates/build-and-push
      #  with:
      #    image-name: ${{ env.TEST_TAG }}
      #  if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
      - name: Build a Docker image
        uses: ./.github/action_templates/build
        with:
          image-name: ${{ env.TEST_TAG }}
        
      - name: Test
        run: |
          docker run --rm ${{ env.TEST_TAG }}
      #- name: Remove Image
      #  run: |
      #    docker image rm ${{ env.TEST_TAG }} -f
